version: 0.2

env:
  variables:
    TAGS: "bindata"

phases:
  install:
    commands:
      - echo Starting the Docker daemon...
      - ls -la
      - /usr/local/bin/dockerd-entrypoint.sh
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - export IMAGE_TAG=$(git describe --tags --abbrev=0)
  build:
    commands:
      - echo Build started on `date`
      - ls -la
      #- make build
      - docker run --rm -v $(pwd):/project --workdir /project --user 998:998  tsilyk/golang-nodejs-alpine:latest sh -c "TAGS=bindata make build && go build contrib/environment-to-ini/environment-to-ini.go"
      #- go build contrib/environment-to-ini/environment-to-ini.go
      - echo Tests started on `date`
      #- make test-frontend
      - docker run --rm -v $(pwd):/project --workdir /project --user 998:998  tsilyk/golang-nodejs-alpine:latest sh -c "make test#TestAdminViewUsers"
      - pwd
      - ls -la
      - id
      - echo Building the Docker image...
      - docker version
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - ls -la
      - pwd
      - docker images
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
